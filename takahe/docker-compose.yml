x-takahe-common:
  &takahe-common

    image: jointakahe/takahe:latest
    environment:
      TAKAHE_DATABASE_SERVER: ${TAKAHE_DATABASE_SERVER:?}
      TAKAHE_SECRET_KEY: ${TAKAHE_SECRET_KEY:?}
      TAKAHE_MEDIA_BACKEND: ${TAKAHE_MEDIA_BACKEND:?}
      TAKAHE_EMAIL_SERVER: ${TAKAHE_EMAIL_SERVER:?}
      TAKAHE_EMAIL_FROM: ${TAKAHE_EMAIL_FROM:?}
      TAKAHE_AUTO_ADMIN_EMAIL: ${TAKAHE_AUTO_ADMIN_EMAIL:?}
      TAKAHE_MAIN_DOMAIN: ${TAKAHE_MAIN_DOMAIN:?}
      TAKAHE_ERROR_EMAILS: '[ "${TAKAHE_AUTO_ADMIN_EMAIL}" ]'
      TAKAHE_ENVIRONMENT: "production"
      TAKAHE_CSRF_TRUSTED_ORIGINS: '["http://127.0.0.1:8000", "https://127.0.0.1:8000"]'
      TAKAHE_USE_PROXY_HEADERS: "true"
    restart: on-failure
    volumes:
      - takahedata:/takahe/

services:
  web:
    <<: *takahe-common
    healthcheck:
      test: ["CMD", "nc", "-z", "-v", "localhost", "8000"]
      interval: 20s
      timeout: 60s
      start_period: 15s
    ports:
      - "8000:8000"

  stator:
    <<: *takahe-common
    command: ["/takahe/manage.py", "runstator"]

  setup:
    <<: *takahe-common
    restart: "no"
    command: >
      bash -c "/takahe/manage.py migrate && /takahe/manage.py collectstatic --noinput"

  tunnel:
    container_name: cloudflared-tunnel
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel run
    environment:
      TUNNEL_TOKEN: ${CLOUDFLARED_TUNNEL_TOKEN:?}

volumes:
  takahedata: